#!/bin/bash
# ------------------------------------------------------------
# script:  /usr/local/sbin/install-kernel
# Author:  Esteban M. Navas Martín
# Date:    21-01-2025
# Ver:     1.5
#
# Purpose: List available installable kernels (generic or proxmox), show installed ones, and allow installation

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
NC='\033[0m'

echo "Obteniendo la lista de kernels instalables (generic y proxmox)..."

# Obtener los kernels disponibles que sean generic o proxmox
available_kernels=$(apt-cache search --names-only '^linux-image-[0-9]+\.[0-9]+\.[0-9]+.*' | grep -E '(generic|proxmox|amd64)' | awk '{print $1}')

# Obtener los kernels actualmente instalados
installed_kernels=$(dpkg --list | grep -E "^ii\s+(linux-image|proxmox-kernel)-[0-9]" | awk '{print $2}')

# Verificar si hay kernels disponibles
if [[ -z "$available_kernels" ]]; then
    echo -e "${RED}No se encontraron kernels 'generic' o 'proxmox' disponibles para instalación.${NC}"
    exit 1
fi

# Ordenar los kernels por versión y separarlos por series
sorted_kernels=$(echo "$available_kernels" | sed -E 's/.*-([0-9]+\.[0-9]+)\.[0-9]+.*/\1 \0/' | sort -k1,1V -k2,2V)
series=""

# Mostrar la lista de kernels ordenada y separada por series
echo -e "${GREEN}Kernels disponibles para instalar:${NC}"
options=()
i=1

while read -r line; do
    current_series=$(echo "$line" | awk '{print $1}')
    kernel=$(echo "$line" | awk '{print $2}')
    
    if [[ "$current_series" != "$series" ]]; then
        # Nueva serie detectada, mostrar encabezado
        series="$current_series"
        echo -e "\n${YELLOW}Serie $series:${NC}"
    fi

    # Verificar si el kernel está instalado
    if echo "$installed_kernels" | grep -qw "$kernel"; then
        echo -e "  $i) ${BLUE}$kernel (INSTALADO)${NC}"
    else
        echo "  $i) $kernel"
    fi

    # Agregar el kernel a las opciones
    options+=("$kernel")
    i=$((i + 1))
done <<< "$sorted_kernels"

# Pedir al usuario que seleccione un kernel
echo -e "\nSeleccione un kernel para instalar:"
read -p "Ingrese el número correspondiente (o 0 para cancelar): " selection

# Validar la selección
if [[ "$selection" -eq 0 ]]; then
    echo "Operación cancelada."
    exit 0
elif [[ "$selection" -lt 1 || "$selection" -gt ${#options[@]} ]]; then
    echo -e "${RED}Selección inválida.${NC}"
    exit 1
fi

# Obtener el kernel seleccionado
selected_kernel="${options[$((selection - 1))]}"
echo -e "${YELLOW}Ha seleccionado el kernel: $selected_kernel${NC}"

# Verificar si el kernel ya está instalado
if echo "$installed_kernels" | grep -qw "$selected_kernel"; then
    echo -e "${BLUE}El kernel $selected_kernel ya está instalado.${NC}"
    exit 0
fi

# Determinar el tipo de kernel y preparar la lista de paquetes a instalar
packages_to_install=("$selected_kernel")
if [[ "$selected_kernel" == *generic* ]]; then
    # Extraer la versión del kernel
    kernel_version=$(echo "$selected_kernel" | sed -E 's/^[^0-9]*([0-9]+\.[0-9]+\.[0-9]+-[0-9]+).*/\1/')

    echo "KERNEL VERSION: $kernel_version"

    # Agregar los paquetes headers y modules-extra
    packages_to_install+=("linux-headers-$kernel_version-generic" "linux-modules-extra-$kernel_version-generic")
fi

# Confirmar la instalación
echo -e "${GREEN}Los siguientes paquetes se instalarán:${NC}"
for pkg in "${packages_to_install[@]}"; do
    echo "  - $pkg"
done

read -p "¿Desea proceder con la instalación? (s/N): " confirm
if [[ "$confirm" =~ ^[sS]$ ]]; then
    echo -e "${GREEN}Instalando paquetes seleccionados...${NC}"
    sudo apt-get install -y "${packages_to_install[@]}"
    if [[ $? -eq 0 ]]; then
        echo -e "${GREEN}La instalación se completó correctamente.${NC}"
    else
        echo -e "${RED}Hubo un error durante la instalación.${NC}"
    fi
else
    echo "Operación cancelada."
fi
