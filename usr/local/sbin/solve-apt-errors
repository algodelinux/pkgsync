#!/bin/bash
# solve-apt-errors - Trata de resolver posibles errores de apt
# 2013-2025 Esteban M. Navas Martín <algodelinux@gmail.com>.
#

killprocess() {

   updatehour=$(ps aux|grep $1 | grep -v grep | head -1 | awk '{print $9}')
   if [ -n $updatehour ]; then
      timestampupdate=$(date -d "$updatehour" +'%s')
      timestampnow=$(date +'%s')
      diference=$(($timestampnow - $timestampupdate))
      minutesfromupdate=$(($diference / 60))

      if [ "$minutesfromupdate" -gt "$2" ]; then
         # Matamos proceso
         pkill -9 $1 2>/dev/null
      fi
   fi
}

wait_while_locked() {
   [ -x /usr/local/sbin/wait_for_apt_or_dpkg ] && timeout $TIMEOUT_FOR_DPKG_OR_APT /usr/local/sbin/wait_for_apt_or_dpkg
}

reinstall_broken_dpkg() {
    local INFO_DIR="/var/lib/dpkg/info"
    local BROKEN_PACKAGES=()

    # Iterar sobre paquetes instalados
    for pkg in $(dpkg -l | awk '/^ii/ {print $2}'); do
        if [ ! -f "$INFO_DIR/${pkg}.list" ]; then
            BROKEN_PACKAGES+=("$pkg")
        fi
    done

    # Si no hay paquetes rotos, salir silenciosamente
    if [ ${#BROKEN_PACKAGES[@]} -eq 0 ]; then
        return 0
    fi

    # Mostrar solo si hay paquetes con archivos .list faltantes
    echo "Paquetes con archivos .list faltantes:"
    printf '%s\n' "${BROKEN_PACKAGES[@]}"

    echo "Reinstalando paquetes automáticamente..."
    apt-get update; apt-get install --reinstall -y "${BROKEN_PACKAGES[@]}"
    echo "Reinstalación completada."
}


RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

if (( $EUID != 0 )); then
   echo -e "${RED}Please run with SUDO or root user account${NC}"
   exit 1
fi

idioma=$LC_ALL
export LC_ALL=C
export DEBIAN_FRONTEND=noninteractive

# Tiempo máximo en minutos que puede estar corriendo sinc_puppet antes de matarlo
TIMEOUT_FOR_SINC_PUPPET="5"
# Tiempo máximo de espera a que dpkg o apt hayan terminado antes de realizar pkgsync 
# Este ajuste puede definirse en segundos (30 o 30s), minutos (10m), horas (6h) o días (2d).
TIMEOUT_FOR_DPKG_OR_APT="3m"

if [ -f /etc/default/pkgsync ]; then
   TIMEOUT_FOR_DPKG_OR_APT=$(grep -v "^#" /etc/default/pkgsync | sed -n 's|TIMEOUT_FOR_DPKG_OR_APT="\(.*\)"|\1|p')
   TIMEOUT_FOR_SINC_PUPPET=$(grep -v "^#" /etc/default/pkgsync | sed -n 's|TIMEOUT_FOR_SINC_PUPPET="\(.*\)"|\1|p')
fi

if [ -s "$TIMEOUT_FOR_DPKG_OR_APT" ]; then
   TIMEOUT_UNITS=${TIMEOUT_FOR_DPKG_OR_APT: -1}
   TIMEOUT_NUMBER=${TIMEOUT_FOR_DPKG_OR_APT:: -1}
fi

case "$TIMEOUT_UNITS" in

"s")  AFTER_TIMEOUT=$TIMEOUT_NUMBER
    ;;
"m")  AFTER_TIMEOUT=$(($TIMEOUT_NUMBER * 60))
    ;;
"h")  AFTER_TIMEOUT=$((expr $TIMEOUT_NUMBER * 3600))
    ;;
"d")  AFTER_TIMEOUT=$((expr $TIMEOUT_NUMBER * 86400))
   ;;
esac

if [ "$1" == "-f" ]; then
   $TIMEOUT_FOR_SINC_PUPPET=0
   $AFTER_TIMEOUT=0
fi

# Matamos procesos detenidos
stopped_processes=$(ps auwx | awk 'NR>1 && $8 ~ "T" {print $2}')
if [ "$stopped_processes" ]; then kill -9 $stopped_processes; fi

# Matamos sinc_puppet si está corriendo desde hace más de xx minutos
if [ $(pgrep -c sinc_puppet) -gt 0 ]; then killprocess sinc_puppet $TIMEOUT_FOR_SINC_PUPPET; fi

# Tratamos de instalar paquetes en estado ic
wait_while_locked; incomplete_packages=$(dpkg -l|grep ^ic | awk '{print $2}')
if [ "$incomplete_packages" ]; then
   wait_while_locked; apt-get -y install -o Dpkg::Options::="--force-confold" $incomplete_packages
fi

# Reinstalamos paquetes en muy mal estado o los desinstalamos si no se pueden reinstalar
wait_while_locked; very_bad_state_packages=$(dpkg -l|grep "^.HR" | awk '{print $2}')
if [ "$very_bad_state_packages" ]; then
   for packagename in $very_bad_state_packages; do
       mv /var/lib/dpkg/info/$packagename.* /tmp/
       wait_while_locked; dpkg --purge --force-all $packagename
       wait_while_locked; apt-get -y install -o Dpkg::Options::="--force-confold" $packagename
       if [ $? -ne 0 ]; then
          wait_while_locked; dpkg --purge --force-all $packagename
       fi
   done
fi

# Desinstalamos paquetes en estado de inconsistencia
wait_while_locked; inconsistent_packages=$(dpkg -l|grep ^iU | awk '{print $2}')
if [ "$inconsistent_packages" ]; then
   for packagename in $inconsistent_packages; do
       mv /var/lib/dpkg/info/$packagename.* /tmp/
       wait_while_locked; dpkg --remove --force-remove-reinstreq $packagename
   done
fi

# Reinstalamos paquetes a medio instalar o los desinstalamos si no se pueden reinstalar
wait_while_locked; bad_packages=$(dpkg -l | grep -e ^iF -e ^ri | awk '{print $2}')
if [ "$bad_packages" ]; then
   wait_while_locked; apt-get -y install -o Dpkg::Options::="--force-confold" $bad_packages
   wait_while_locked; bad_packages=$(dpkg -l | grep -e ^iF -e ^ri | awk '{print $2}')
   if [ "$bad_packages" ]; then
      wait_while_locked; apt-get remove -y $bad_packages
      if [ $? -ne 0 ]; then
         wait_while_locked; dpkg --purge --force-all $bad_packages
      fi
   fi
fi

wait_while_locked; apt-get check 1>/dev/null 2>/tmp/apterrors

if [ -s /tmp/apterrors ]; then
   if [ -n "$(grep 'Unable to acquire the dpkg frontend lock' /tmp/apterrors)" ]; then
      if [ $(pgrep -c aptitude) -gt 0 ]; then killprocess aptitude $AFTER_TIMEOUT; fi
      if [ $(pgrep -c apt-get) -gt 0 ]; then killprocess apt-get $AFTER_TIMEOUT; fi
      if [ $(pgrep -c dpkg) -gt 0 ]; then killprocess dpkg $AFTER_TIMEOUT; fi
   fi

   grep "Unmet dependencies." /tmp/apterrors 2>/dev/null && wait_while_locked; aptitude -yf install; wait_while_locked; dpkg --configure -a
   grep "dpkg was interrupted, you must manually run 'dpkg --configure -a' to correct the problem." /tmp/apterrors 2>/dev/null && wait_while_locked; dpkg --configure -a; wait_while_locked; aptitude -yf install
   grep -E 'Encountered a section with no Package: header|Problem with MergeList ' /tmp/apterrors 2>/dev/null && rm -r /var/lib/apt/lists/*; wait_while_locked; apt-get update -y; wait_while_locked; dpkg --configure -a; wait_while_locked; aptitude -yf install
fi

# Reinstalamos paquetes con archivos .list faltantes
reinstall_broken_dpkg

# Aseguramos la actualización de pkgsync
wait_while_locked; apt-cache search '~U' | grep -oE pkgsync >/dev/null 2>&1 && apt-get -y install -o Dpkg::Options::="--force-confold" pkgsync

export LC_ALL=$idioma
